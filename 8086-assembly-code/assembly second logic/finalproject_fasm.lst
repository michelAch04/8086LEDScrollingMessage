                                                                PORTA EQU 00H
                                                                PORTB EQU 02H
                                                                CONTROL_WORD EQU 06H
                                                                
                                                                CHARACTER_COUNT EQU 0BH
                                                                COL_COUNT EQU 05H
                                                                DISPLAY_START EQU 80H
                                                                
                                                                org 0100H
00000000: 90                                                    Nop
00000001: 90                                                    nop
00000002: 90                                                    nop
00000003: 90                                                    nop
00000004: 90                                                    nop
00000005: 90                                                    nop
                                                                INITIALIZE_8255:
00000006: B0 80                                                    MOV AL, 80H                         ; Control word, Port A/Port B as outputs
00000008: E6 06                                                    OUT CONTROL_WORD, AL
                                                                
                                                                START:
0000000A: 8C C8                                                    MOV AX, CS
0000000C: 8E D8                                                    MOV DS, AX
                                                                   
0000000E: B1 00                                                    MOV CL, 00H                         ; nb of character index 1->CHARACTER_COUNT
00000010: BE 03 02                                                 MOV SI,  LED_MATRIX           ; point SI to start of display (128)
00000013: 81 C6 80 00                                              ADD SI, 80H
                                                                   
                                                                
                                                                WRITE_WORD:
00000017: B5 00                                                    MOV CH, 00H                         ; character column pointer 1->5
00000019: B2 00                                                    MOV DL, 00H                         ; global column pointer 1->128
                                                                   
0000001B: BB F8 01                                                 MOV BX,  MSG_TABLE            ; pointer to currect character
0000001E: 01 CB                                                    ADD BX, CX                          ; point register to current character
                                                                   
00000020: BF 71 01                                                 MOV DI,  LOOKUP1              ; initialize lookup table pointer
00000023: 8A 07                                                    MOV AL, [BX]
00000025: 01 C7                                                    ADD DI, AX                          ; point it to columns of current character
                                                                   INTERCHARACTER_LOOP:
00000027: 8A 05                                                       MOV AL, [DI]                     ; get column i of character j
00000029: 88 04                                                       MOV [SI], AL                     ; write it in display matrix
                                                                      
0000002B: 83 C7 1B                                                    ADD DI, 1BH                      ; move to next lookup table same character
0000002E: FE C5                                                       INC CH                           ; increment character column pointer
00000030: 46                                                          INC SI
00000031: 80 FD 05                                                    CMP CH, COL_COUNT                ; check if all 5 columns  processed
00000034: 75 F1                                                       JNZ INTERCHARACTER_LOOP          ; continue intercharcter_loop if incomplete
                                                                
00000036: FE C1                                                    INC CL                              ; move to next character
00000038: 80 F9 0B                                                 CMP CL, CHARACTER_COUNT             ; check if all characters processed
0000003B: 75 DA                                                    JNZ WRITE_WORD                      ; if notprocessed restart
                                                                
                                                                SET_START:
0000003D: BE 03 02                                                 MOV SI,  LED_MATRIX           ; start of display (initially empty display)
00000040: B9 00 00                                                 MOV CX, 00H                         ; to check instead of si (temp variable)
                                                                   
                                                                DISPLAY_WORD:
00000043: B4 00                                                    MOV AH, 00H                         ; reset just in case
00000045: B6 00                                                    MOV DH, 00H
                                                                   
00000047: B2 00                                                    MOV DL, 00H                         ; global column pointer 1->128
00000049: B0 00                                                    MOV AL, 00H                         ; reset AL
                                                                   DISPLAY_LOOP:
0000004B: 89 F7                                                       MOV DI, SI                       ; initialize pointer to current data
0000004D: 01 D7                                                       ADD DI, DX
                                                                      
0000004F: 88 D0                                                       MOV AL, DL                       ; current column to be selection
00000051: E6 02                                                       OUT PORTB, AL                    ; output column selection
                                                                  
00000053: 8A 05                                                       MOV AL, [DI]                     ; get data from matrix
00000055: F6 D0                                                       NOT AL                           ; row is active low
00000057: E6 00                                                       OUT PORTA, AL                    ; output row data
                                                                      
00000059: E8 27 02                                                    CALL DELAY                       ; call column delay
                                                                      
0000005C: FE C2                                                       INC DL                           ; increment global column pointer
0000005E: 80 FA 80                                                    CMP DL, 80H                      ; check if all columns are processed
00000061: 75 E8                                                       JNZ DISPLAY_LOOP                 ; if not loop again
                                                                   
00000063: E8 26 02                                                 CALL SCROLLING_DELAY                ; call scrolling delay
00000066: 46                                                       INC SI                              ; increment start of display (move in slowly slowly)
00000067: 41                                                       INC CX
00000068: 81 F9 02 01                                              CMP CX, 0102H                       ; check if message re-disappeared
0000006C: 75 D5                                                    JNZ DISPLAY_WORD                    ; if not loop again
                                                                
0000006E: EB CD                                                    JMP SET_START
00000070: F4                                                    HLT
                                                                   
                                                                ; LOOKUP TABLES (5x8 character representation, each with spacing, size=27) 
                                                                ; Columns 1 of characters 
00000071: 7F 7F 7F 7F 7F 7F 7F 7F 00 03 7F 7F 7F 7F 7F 7F       LOOKUP1 DB 7FH, 7FH, 7FH, 7FH, 7FH, 7FH, 7FH, 7FH, 00H, 3H, 7FH, 7FH, 7FH, 7FH, 7FH, 7FH, 7FH, 7FH, 31H, 00H, 7FH, 7FH, 7FH, 77H, 60H, 43H, 00H
          7F 7F 31 00 7F 7F 7F 77 60 43 00                      
                                                                
                                                                ; Columns 2 of characters
0000008C: 48 49 41 41 49 48 41 08 41 41 14 01 20 20 41 48       LOOKUP2 DB 48H, 49H, 41H, 41H, 49H, 48H, 41H, 8H, 41H, 41H, 14H, 1H, 20H, 20H, 41H, 48H, 42H, 4CH, 49H, 40H, 01H, 01H, 02H, 08H, 10H, 45H, 00H
          42 4C 49 40 01 01 02 08 10 45 00                      
                                                                
                                                                ; Columns 3 of characters
000000A7: 48 49 41 41 49 48 49 08 7F 7F 22 01 20 20 41 48       LOOKUP3 DB 48H, 49H, 41H, 41H, 49H, 48H, 49H, 08H, 7FH, 7FH, 22H, 01H, 20H, 20H, 41H, 48H, 46H, 4AH, 49H, 7FH, 01H, 01H, 02H, 08H, 1FH, 59H, 00H
          46 4A 49 7F 01 01 02 08 1F 59 00                      
                                                                
                                                                ; Columns 4 of characters
000000C2: 7F 36 41 3E 41 40 4F 7F 41 40 41 01 7F 1F 7F 78       LOOKUP4 DB 7FH, 36H, 41H, 3EH, 41H, 40H, 4FH, 7FH, 41H, 40H, 41H, 01H, 7FH, 1FH, 7FH, 78H, 7FH, 79H, 46H, 40H, 7FH, 7EH, 7FH, 77H, 60H, 61H, 00H
          7F 79 46 40 7F 7E 7F 77 60 61 00                      
                                                                
                                                                ; Columns 5 of characters for spacing
000000DD: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       LOOKUP5 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H 
          00 00 00 00 00 00 00 00 00 00 00                      
                                                                
                                                                ; table for message characters (offset)
000000F8: 08 1A 0B 0E 15 04 1A 14 12 04 0A                      MSG_TABLE DB 08H, 1AH, 0BH, 0EH, 15H, 04H, 1AH, 14H, 12H, 04H, 0AH
                                                                
                                                                
                                                                ;LED MATRIX DISPLAY (128 x 3 = 384, we will be outputting from 128 to 256)
00000103: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       LED_MATRIX DB 384 DUP(00H)
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00       
                                                                
                                                                DELAY:
00000283: 51                                                       PUSH CX
00000284: B9 09 00                                                 MOV CX, 09H
                                                                   DELAY_LOOP:
00000287: 90                                                          NOP
00000288: E2 FD                                                       LOOP DELAY_LOOP
0000028A: 59                                                       POP CX
0000028B: C3                                                       RET
                                                                
                                                                SCROLLING_DELAY:
0000028C: 51                                                       PUSH CX
0000028D: B9 18 09                                                 MOV CX, 0918H
                                                                   SCROLLING_DELAY_LOOP:
00000290: 90                                                          NOP
00000291: E2 FD                                                       LOOP SCROLLING_DELAY_LOOP
00000293: 59                                                       POP CX
00000294: C3                                                       RET
                                                                      
                                                                      
                                                                
